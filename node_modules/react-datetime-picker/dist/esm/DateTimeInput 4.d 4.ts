/// <reference types="react" />
import PropTypes from 'prop-types';
import { isMaxDate, isMinDate } from './shared/propTypes';
import type { Detail } from './shared/types';
type DateTimeInputProps = {
    amPmAriaLabel?: string;
    autoFocus?: boolean;
    className: string;
    dayAriaLabel?: string;
    dayPlaceholder?: string;
    disabled?: boolean;
    format?: string;
    hourAriaLabel?: string;
    hourPlaceholder?: string;
    isWidgetOpen?: boolean | null;
    locale?: string;
    maxDate?: Date;
    maxDetail?: Detail;
    minDate?: Date;
    minuteAriaLabel?: string;
    minutePlaceholder?: string;
    monthAriaLabel?: string;
    monthPlaceholder?: string;
    name?: string;
    nativeInputAriaLabel?: string;
    onChange?: (value: Date | null, shouldCloseWidgets: boolean) => void;
    onInvalidChange?: () => void;
    required?: boolean;
    secondAriaLabel?: string;
    secondPlaceholder?: string;
    showLeadingZeros?: boolean;
    value?: string | Date | null;
    yearAriaLabel?: string;
    yearPlaceholder?: string;
};
declare function DateTimeInput({ amPmAriaLabel, autoFocus, className, dayAriaLabel, dayPlaceholder, disabled, format, hourAriaLabel, hourPlaceholder, isWidgetOpen: isWidgetOpenProps, locale, maxDate, maxDetail, minDate, minuteAriaLabel, minutePlaceholder, monthAriaLabel, monthPlaceholder, name, nativeInputAriaLabel, onChange: onChangeProps, onInvalidChange, required, secondAriaLabel, secondPlaceholder, showLeadingZeros, value: valueProps, yearAriaLabel, yearPlaceholder, }: DateTimeInputProps): JSX.Element;
declare namespace DateTimeInput {
    var propTypes: {
        amPmAriaLabel: PropTypes.Requireable<string>;
        autoFocus: PropTypes.Requireable<boolean>;
        className: PropTypes.Validator<string>;
        dayAriaLabel: PropTypes.Requireable<string>;
        dayPlaceholder: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        format: PropTypes.Requireable<string>;
        hourAriaLabel: PropTypes.Requireable<string>;
        hourPlaceholder: PropTypes.Requireable<string>;
        isWidgetOpen: PropTypes.Requireable<boolean>;
        locale: PropTypes.Requireable<string>;
        maxDate: typeof isMaxDate;
        maxDetail: PropTypes.Requireable<"hour" | "minute" | "second">;
        minDate: typeof isMinDate;
        minuteAriaLabel: PropTypes.Requireable<string>;
        minutePlaceholder: PropTypes.Requireable<string>;
        monthAriaLabel: PropTypes.Requireable<string>;
        monthPlaceholder: PropTypes.Requireable<string>;
        name: PropTypes.Requireable<string>;
        nativeInputAriaLabel: PropTypes.Requireable<string>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        required: PropTypes.Requireable<boolean>;
        secondAriaLabel: PropTypes.Requireable<string>;
        secondPlaceholder: PropTypes.Requireable<string>;
        showLeadingZeros: PropTypes.Requireable<boolean>;
        value: PropTypes.Requireable<NonNullable<string | Date | null | undefined>>;
        yearAriaLabel: PropTypes.Requireable<string>;
        yearPlaceholder: PropTypes.Requireable<string>;
    };
}
export default DateTimeInput;
